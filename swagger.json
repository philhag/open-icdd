{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenICDD API",
    "description": "OpenICDD API",
    "termsOfService": "https://icdd.vm.rub.de/ui/Page/Contact",
    "contact": {
      "name": "icdd-plattform@ruhr-uni-bochum.de",
      "url": "https://www.inf.bi.ruhr-uni-bochum.de/",
      "email": "icdd-plattform@ruhr-uni-bochum.de"
    },
    "license": {
      "name": "CC-BY-40",
      "url": "https://creativecommons.org/licenses/by/4.0/"
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "http://localhost:44357/dev01/"
    },
    {
      "url": "https://icdd.vm.rub.de/dev01/"
    },
    {
      "url": "https://icdd.vm.rub.de/dev01/"
    },
    {
      "url": "https://icdd.vm.rub.de/ui/"
    },
    {
      "url": "https://icdd.vm.rub.de/amsfree/"
    },
    {
      "url": "https://icdd.vm.rub.de/bim4ams/"
    },
    {
      "url": "https://icdd.vm.rub.de/bridgeinspect/"
    },
    {
      "url": "https://icdd.vm.rub.de/advancedbim/"
    }
  ],
  "paths": {
    "/api/v{apiVersion}/Admin/versions": {
      "post": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/VersionApi"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/VersionApi"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/VersionApi"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/VersionApi"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/VersionApi"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/VersionApi"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/VersionApi"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/VersionApi"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/VersionApi"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/VersionApi"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/VersionApi"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VersionApi"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/VersionApi"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/VersionApi"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/VersionApi"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/VersionApi"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/VersionApi"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/VersionApi"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/VersionApi"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/VersionApi"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/VersionApi"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/VersionApi"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/VersionApi"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/VersionApi"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/VersionApi"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/VersionApi"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/VersionApi"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/VersionApi"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionApi"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/VersionApi"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/VersionApi"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/VersionApi"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/VersionApi"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{apiVersion}/Admin/projects": {
      "post": {
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Project"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Project"
                }
              }
            }
          }
        }
      }
    },
    "/api/v{apiVersion}/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logs in user to authorize further requests",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns access and refresh token including their expiration time (header)"
          },
          "400": {
            "description": "Invalid user credentials"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "403": {
            "description": "No permission for the requested operation"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/Auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Invalidates refresh token",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Content"
          },
          "400": {
            "description": "Token is invalid"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "403": {
            "description": "No permission for the requested operation"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/Auth/refreshtoken": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Returns refresh token",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refreshToken",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns new access and refresh token including their expiration time (header)"
          },
          "400": {
            "description": "Refresh token expired or does not belong to access token"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "403": {
            "description": "No permission for the requested operation"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/Auth/users": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Returns list of existing users (admins only)",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns list of existing users",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "403": {
            "description": "No permission for the requested operation"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/Auth/registeruser": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register new user",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UserRegister"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns newly created user",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "403": {
            "description": "No permission for the requested operation"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/Auth/user/{username}/role/{role}": {
      "put": {
        "tags": [
          "Auth"
        ],
        "summary": "Add role to user",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns user",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "User was not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/Auth/user/role": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Add role to user",
        "parameters": [
          {
            "name": "role",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns user"
          },
          "400": {
            "description": "User was not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/Auth/checktoken": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Check if user token expired",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns user"
          },
          "401": {
            "description": "Token expired or could not check token"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes": {
      "get": {
        "tags": [
          "Container"
        ],
        "summary": "Returns existing container types",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns types",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerType"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerType"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerType"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerType"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerType"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerType"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerType"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerType"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerType"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerType"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerType"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerType"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerType"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerType"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers": {
      "get": {
        "tags": [
          "Container"
        ],
        "summary": "Returns existing containers in database",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns container-list as json",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerMetadataDTO"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerMetadataDTO"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerMetadataDTO"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerMetadataDTO"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerMetadataDTO"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerMetadataDTO"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerMetadataDTO"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerMetadataDTO"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerMetadataDTO"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerMetadataDTO"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerMetadataDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerMetadataDTO"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerMetadataDTO"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerMetadataDTO"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerMetadataDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContainerMetadataDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Container"
        ],
        "summary": "Posts new container (id will be overwritten)",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ContainerFileName": {
                    "type": "string"
                  },
                  "ContainerDescription": {
                    "type": "string"
                  },
                  "Revision": {
                    "type": "string"
                  },
                  "Suitability": {
                    "$ref": "#/components/schemas/ContainerSuitability"
                  },
                  "Status": {
                    "$ref": "#/components/schemas/ContainerStatus"
                  },
                  "MetadataSchema": {
                    "type": "string"
                  },
                  "AdditionalParameters": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AdditionalParameter"
                    }
                  },
                  "File": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "ContainerFileName": {
                  "style": "form"
                },
                "ContainerDescription": {
                  "style": "form"
                },
                "Revision": {
                  "style": "form"
                },
                "Suitability": {
                  "style": "form"
                },
                "Status": {
                  "style": "form"
                },
                "MetadataSchema": {
                  "style": "form"
                },
                "AdditionalParameters": {
                  "style": "form"
                },
                "File": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns new container"
          },
          "400": {
            "description": "Could not read container or file is missing or not of type .icdd"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project does not exist"
          },
          "409": {
            "description": "Could not rename container file"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}": {
      "get": {
        "tags": [
          "Container"
        ],
        "summary": "Returns container by id",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns container as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Container"
        ],
        "summary": "Posts new container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns new container as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "409": {
            "description": "Container version already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Container"
        ],
        "summary": "Deletes newest version of the container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes container"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "409": {
            "description": "Container version already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/query": {
      "get": {
        "tags": [
          "Container"
        ],
        "summary": "Query container with SPARQL",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applyInference",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns json"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/query": {
      "get": {
        "tags": [
          "Container"
        ],
        "summary": "Query container version with SPARQL",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applyInference",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns json"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/queries": {
      "get": {
        "tags": [
          "Container"
        ],
        "summary": "Gets all queries of newest container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns query"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/queries": {
      "get": {
        "tags": [
          "Container"
        ],
        "summary": "Gets all queries of specified container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns query"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/queries/{queryId}": {
      "get": {
        "tags": [
          "Container"
        ],
        "summary": "Gets query of newest container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "queryId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns query"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/queries/{queryId}": {
      "get": {
        "tags": [
          "Container"
        ],
        "summary": "Gets query of specified container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "queryId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns query"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/empty": {
      "post": {
        "tags": [
          "Container"
        ],
        "summary": "Posts new empty container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ContainerMetadataRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns new container"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions": {
      "get": {
        "tags": [
          "Container"
        ],
        "summary": "Gets all versions of container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns existing versions",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}": {
      "get": {
        "tags": [
          "Container"
        ],
        "summary": "Returns specified container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns container as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Container"
        ],
        "summary": "Deletes specified version of the container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes container"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "409": {
            "description": "Container version already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/attachment": {
      "get": {
        "tags": [
          "Container"
        ],
        "summary": "Get file of newest container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns container as file"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/attachment": {
      "get": {
        "tags": [
          "Container"
        ],
        "summary": "Get file of specified container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns container as file"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/turtle": {
      "get": {
        "tags": [
          "Container"
        ],
        "summary": "Get turtle file of specified container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns container as turtle file"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/turtle": {
      "get": {
        "tags": [
          "Container"
        ],
        "summary": "Get turtle file of specified container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns container as turtle file"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/participant": {
      "post": {
        "tags": [
          "Container"
        ],
        "summary": "Adds a new participant to container. Parameter type is 1 if person, 0 if organisation",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "participantName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "participantDescription",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Adds participant and returns container if successful"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "409": {
            "description": "Container version already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/participant": {
      "post": {
        "tags": [
          "Container"
        ],
        "summary": "Adds a new participant to container version. Parameter type is 1 if person, 0 if organisation",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "participantName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "participantDescription",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Adds participant and returns container if successful"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "409": {
            "description": "Container version already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/ontology": {
      "post": {
        "tags": [
          "Container"
        ],
        "summary": "Posts new ontology to newest container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "webURL",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "uploadFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "uploadFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Adds ontology and returns container"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "409": {
            "description": "Container version already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/ontology": {
      "post": {
        "tags": [
          "Container"
        ],
        "summary": "Posts new ontology to specified container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "webURL",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "uploadFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "uploadFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Adds ontology and returns container"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "409": {
            "description": "Container version already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/payloadtriples": {
      "post": {
        "tags": [
          "Container"
        ],
        "summary": "Posts payload triples to newest container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "webURL",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "uploadFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "uploadFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Adds ontology and returns"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "409": {
            "description": "Container version already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Container"
        ],
        "summary": "Get payload triples as file of newest container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payloadFileName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns payload triples as file"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/payloadtriples": {
      "post": {
        "tags": [
          "Container"
        ],
        "summary": "Posts payload triples to specified container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "webURL",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "uploadFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "uploadFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Adds ontology and returns"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "409": {
            "description": "Container version already exists"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Container"
        ],
        "summary": "Get payload triples as file of specified container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "payloadFileName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns payload triples as file"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/contents": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Gets all contents of newest version of a container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns contents as json-list",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/contents": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Gets all contents of specified version of a container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns contents as json-list",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ContentMetadata"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/contents/internal": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "Posts new internal content to newest version of the container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "Schema": {
                    "type": "string"
                  },
                  "SchemaVersion": {
                    "type": "string"
                  },
                  "SchemaSubset": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Schema": {
                  "style": "form"
                },
                "SchemaVersion": {
                  "style": "form"
                },
                "SchemaSubset": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns new content as json-ld"
          },
          "400": {
            "description": "Could not create content"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/contents/internal": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "Posts new internal content to a specified container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "Schema": {
                    "type": "string"
                  },
                  "SchemaVersion": {
                    "type": "string"
                  },
                  "SchemaSubset": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Schema": {
                  "style": "form"
                },
                "SchemaVersion": {
                  "style": "form"
                },
                "SchemaSubset": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns new content as json-ld"
          },
          "400": {
            "description": "Could not create content"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/contents/external": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "Posts new external content to newest version of the container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loadIntoContainer",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "DocumentUri": {
                    "type": "string"
                  },
                  "FileName": {
                    "type": "string"
                  },
                  "FileExtension": {
                    "type": "string"
                  },
                  "MimeType": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "Schema": {
                    "type": "string"
                  },
                  "SchemaVersion": {
                    "type": "string"
                  },
                  "SchemaSubset": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "DocumentUri": {
                  "style": "form"
                },
                "FileName": {
                  "style": "form"
                },
                "FileExtension": {
                  "style": "form"
                },
                "MimeType": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Schema": {
                  "style": "form"
                },
                "SchemaVersion": {
                  "style": "form"
                },
                "SchemaSubset": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns new content as json-ld"
          },
          "400": {
            "description": "Could not create content"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/contents/external": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "Posts new external content to a specified container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loadIntoContainer",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "DocumentUri": {
                    "type": "string"
                  },
                  "FileName": {
                    "type": "string"
                  },
                  "FileExtension": {
                    "type": "string"
                  },
                  "MimeType": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "Schema": {
                    "type": "string"
                  },
                  "SchemaVersion": {
                    "type": "string"
                  },
                  "SchemaSubset": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "DocumentUri": {
                  "style": "form"
                },
                "FileName": {
                  "style": "form"
                },
                "FileExtension": {
                  "style": "form"
                },
                "MimeType": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Schema": {
                  "style": "form"
                },
                "SchemaVersion": {
                  "style": "form"
                },
                "SchemaSubset": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns new content as json-ld"
          },
          "400": {
            "description": "Could not create content"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/contents/encrypted": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "Posts new encrypted content to newest version of the container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "EncryptionAlgorithm": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "Schema": {
                    "type": "string"
                  },
                  "SchemaVersion": {
                    "type": "string"
                  },
                  "SchemaSubset": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "EncryptionAlgorithm": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Schema": {
                  "style": "form"
                },
                "SchemaVersion": {
                  "style": "form"
                },
                "SchemaSubset": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns new content as json-ld"
          },
          "400": {
            "description": "Could not create content"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/contents/encrypted": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "Posts new encrypted content to a specified container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "EncryptionAlgorithm": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "Schema": {
                    "type": "string"
                  },
                  "SchemaVersion": {
                    "type": "string"
                  },
                  "SchemaSubset": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "EncryptionAlgorithm": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Schema": {
                  "style": "form"
                },
                "SchemaVersion": {
                  "style": "form"
                },
                "SchemaSubset": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns new content as json-ld"
          },
          "400": {
            "description": "Could not create content"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/contents/folder": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "Posts new folder to newest version of the container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "FolderName": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "Schema": {
                    "type": "string"
                  },
                  "SchemaVersion": {
                    "type": "string"
                  },
                  "SchemaSubset": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "FolderName": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Schema": {
                  "style": "form"
                },
                "SchemaVersion": {
                  "style": "form"
                },
                "SchemaSubset": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns new content as json-ld"
          },
          "400": {
            "description": "Could not create content"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/contents/folder": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "Posts new folder to a specified container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "FolderName": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "Schema": {
                    "type": "string"
                  },
                  "SchemaVersion": {
                    "type": "string"
                  },
                  "SchemaSubset": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "FolderName": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Schema": {
                  "style": "form"
                },
                "SchemaVersion": {
                  "style": "form"
                },
                "SchemaSubset": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns new content as json-ld"
          },
          "400": {
            "description": "Could not create content"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/contents/secured": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "Posts new secured content to newest version of the container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Checksum": {
                    "type": "string"
                  },
                  "ChecksumAlgorithm": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "Schema": {
                    "type": "string"
                  },
                  "SchemaVersion": {
                    "type": "string"
                  },
                  "SchemaSubset": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "Checksum": {
                  "style": "form"
                },
                "ChecksumAlgorithm": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Schema": {
                  "style": "form"
                },
                "SchemaVersion": {
                  "style": "form"
                },
                "SchemaSubset": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns new content as json-ld"
          },
          "400": {
            "description": "Could not create content"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/contents/secured": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "Posts new secured content to specified container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Checksum": {
                    "type": "string"
                  },
                  "ChecksumAlgorithm": {
                    "type": "string"
                  },
                  "Description": {
                    "type": "string"
                  },
                  "Schema": {
                    "type": "string"
                  },
                  "SchemaVersion": {
                    "type": "string"
                  },
                  "SchemaSubset": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "Checksum": {
                  "style": "form"
                },
                "ChecksumAlgorithm": {
                  "style": "form"
                },
                "Description": {
                  "style": "form"
                },
                "Schema": {
                  "style": "form"
                },
                "SchemaVersion": {
                  "style": "form"
                },
                "SchemaSubset": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns new content as json-ld"
          },
          "400": {
            "description": "Could not create content"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/contents/{contentId}/version": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "Posts new version of internal content to newest version of the container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Url": {
                    "type": "string"
                  },
                  "VersionDescription": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "Url": {
                  "style": "form"
                },
                "VersionDescription": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns new content as json-ld"
          },
          "400": {
            "description": "Could not create content"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/contents/{contentId}/version": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "Posts new version of internal content to a specified container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Url": {
                    "type": "string"
                  },
                  "VersionDescription": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "Url": {
                  "style": "form"
                },
                "VersionDescription": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns new content as json-ld"
          },
          "400": {
            "description": "Could not create content"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/contents/{contentId}": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Gets specified content inside newest version of the container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns content as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/contents/{contentId}": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Gets specified content inside a specified container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns content as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Content"
        ],
        "summary": "Deletes content in container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes content"
          },
          "400": {
            "description": "Could not delete content"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/contents/{contentId}/prior": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Gets prior version of specified content inside newest version of a container. Returns specified content itself if prior version does not exist.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns content as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/contents/{contentId}/prior": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Gets prior version of specified content inside specified version of a container. Returns specified content itself if prior version does not exist.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns content as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/contents/{contentId}/next": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Gets next version of specified content inside newest version of a container. Returns specified content itself if next version does not exist.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns content as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/contents/{contentId}/next": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Gets next version of specified content inside specified version of a container. Returns specified content itself if next version does not exist.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns content as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/contents/{contentId}/versions": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Gets all versions of specified content inside newest version of a container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns content as json-ld",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/contents/{contentId}/versions": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Gets all versions of specified content inside specified version of a container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns content as json-ld",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/JToken"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/contents/{contentId}/newest": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Gets newest version of specified content inside newest version of a container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns content as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/contents/{contentId}/newest": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Gets newest version of specified content inside specified version of a container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns content as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/contents/{contentId}/attachment": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Gets specified content inside newest version of a container as a file",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns content as file"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/contents/{contentId}/attachment": {
      "get": {
        "tags": [
          "Content"
        ],
        "summary": "Gets specified content inside specified version of a container as a file",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns content as file"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/contents/{contentId}/requested": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "Posts requested content to newest container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "changeType",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "newFileExtension",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "newMimeType",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "uploadFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "uploadFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns requested content as json-ld"
          },
          "400": {
            "description": "Could not create content"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/contents/{contentId}/requested": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "Posts requested content to a specified container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "changeType",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "newFileExtension",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "newMimeType",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "uploadFile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              },
              "encoding": {
                "uploadFile": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns requested content as json-ld"
          },
          "400": {
            "description": "Could not create content"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/contents/{contentId}/folder": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "Moves content to specified folder in newest container version. Use 'root' as folderId, if content should be moved to the root folder.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folderId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Moves to folder and returns requested content as json-ld"
          },
          "400": {
            "description": "Could not create content"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/contents/{contentId}/folder": {
      "post": {
        "tags": [
          "Content"
        ],
        "summary": "Moves content to specified folder in specified container version. Use 'root' as folderId, if content should be moved to the root folder.",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "folderId",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Moves to folder and returns requested content as json-ld"
          },
          "400": {
            "description": "Could not create content"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/linksets": {
      "get": {
        "tags": [
          "Linkset"
        ],
        "summary": "Gets all linksets of newest version of a container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns linksets as json-list",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Linkset"
        ],
        "summary": "Posts linkset in newest version of a container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Posts and returns linksets as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/linksets": {
      "get": {
        "tags": [
          "Linkset"
        ],
        "summary": "Gets all linksets of a specified version of a container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns linksets as json-list",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LinksetMetadata"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Linkset"
        ],
        "summary": "Posts linkset in specified version of a container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileName",
            "in": "query",
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Posts and returns linksets as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/linksets/{linksetId}": {
      "get": {
        "tags": [
          "Linkset"
        ],
        "summary": "Gets linkset of newest version of a container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linksetId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns linksets as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/linksets/{linksetId}": {
      "get": {
        "tags": [
          "Linkset"
        ],
        "summary": "Gets linkset of specified version of a container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linksetId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns linksets as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Linkset"
        ],
        "summary": "Deletes linkset in container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linksetId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes linkset"
          },
          "400": {
            "description": "Could not delete linkset"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/linksets/{linksetId}/links": {
      "get": {
        "tags": [
          "Linkset"
        ],
        "summary": "Gets links of specified linkset of newest version of a container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linksetId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return links as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Linkset"
        ],
        "summary": "Deletes multiple linkset links in container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linksetId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deletes multiple linkset links"
          },
          "400": {
            "description": "Could not delete linkset links"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/linksets/{linksetId}/links": {
      "get": {
        "tags": [
          "Linkset"
        ],
        "summary": "Gets links of specified linkset of a container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linksetId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return links as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Linkset"
        ],
        "summary": "Deletes multiple linkset links in container version",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linksetId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Deletes multiple linkset links"
          },
          "400": {
            "description": "Could not delete linkset links"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/linksets/{linksetId}/links/binary": {
      "post": {
        "tags": [
          "Linkset"
        ],
        "summary": "Posts link of specified linkset of newest version of a container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linksetId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "<b>Identifier types:</b>\r\n<br /> No Identifier - 0 <br /> StringBasedIdentifier - 1 <br /> UriBasedIdentifier - 2 <br /> QueryBasedIdentifier - 3",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns new link as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/linksets/{linksetId}/links/binary": {
      "post": {
        "tags": [
          "Linkset"
        ],
        "summary": "Posts link of specified linkset of a container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linksetId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "<b>Identifier types:</b>\r\n<br /> No Identifier - 0 <br /> StringBasedIdentifier - 1 <br /> UriBasedIdentifier - 2 <br /> QueryBasedIdentifier - 3",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BinaryLinkDTO"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns new link as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/linksets/{linksetId}/links/directedbinary": {
      "post": {
        "tags": [
          "Linkset"
        ],
        "summary": "Posts link of specified linkset of newest version of a container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linksetId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "<b>Identifier types:</b>\r\n<br /> No Identifier - 0 <br /> StringBasedIdentifier - 1 <br /> UriBasedIdentifier - 2 <br /> QueryBasedIdentifier - 3",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns new link as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/linksets/{linksetId}/links/directedbinary": {
      "post": {
        "tags": [
          "Linkset"
        ],
        "summary": "Posts link of specified linkset of a container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linksetId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "<b>Identifier types:</b>\r\n<br /> No Identifier - 0 <br /> StringBasedIdentifier - 1 <br /> UriBasedIdentifier - 2 <br /> QueryBasedIdentifier - 3",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedBinaryLinkDTO"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns new link as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/linksets/{linksetId}/links/directed": {
      "post": {
        "tags": [
          "Linkset"
        ],
        "summary": "Posts link of specified linkset of newest version of a container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linksetId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "<b>Identifier types:</b>\r\n<br /> No Identifier - 0 <br /> StringBasedIdentifier - 1 <br /> UriBasedIdentifier - 2 <br /> QueryBasedIdentifier - 3",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns new link as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/linksets/{linksetId}/links/directed": {
      "post": {
        "tags": [
          "Linkset"
        ],
        "summary": "Posts link of specified linkset of a container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linksetId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "<b>Identifier types:</b>\r\n<br /> No Identifier - 0 <br /> StringBasedIdentifier - 1 <br /> UriBasedIdentifier - 2 <br /> QueryBasedIdentifier - 3",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DirectedLinkDTO"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns new link as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/linksets/{linksetId}/links/directed1ton": {
      "post": {
        "tags": [
          "Linkset"
        ],
        "summary": "Posts link of specified linkset of newest version of a container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linksetId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "<b>Identifier types:</b>\r\n<br /> No Identifier - 0 <br /> StringBasedIdentifier - 1 <br /> UriBasedIdentifier - 2 <br /> QueryBasedIdentifier - 3",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns new link as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/linksets/{linksetId}/links/directed1ton": {
      "post": {
        "tags": [
          "Linkset"
        ],
        "summary": "Posts link of specified linkset of a container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linksetId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "<b>Identifier types:</b>\r\n<br /> No Identifier - 0 <br /> StringBasedIdentifier - 1 <br /> UriBasedIdentifier - 2 <br /> QueryBasedIdentifier - 3",
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/xml": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Directed1ToNLinkDTO"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Posts and returns new link as json-ld"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/containerTypes/{containerType}/containers/{containerId}/versions/{containerVersion}/linksets/{linksetId}/links/{linkId}": {
      "delete": {
        "tags": [
          "Linkset"
        ],
        "summary": "Deletes linkset link in container",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerType",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "$ref": "#/components/schemas/ContainerType"
            }
          },
          {
            "name": "containerId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linksetId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deletes linkset link"
          },
          "400": {
            "description": "Could not delete linkset link"
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "404": {
            "description": "The Project or container does not exist"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/versioninfo": {
      "get": {
        "tags": [
          "VersionProject"
        ],
        "summary": "Returns existing API versions",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns versions",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/versions": {
      "get": {
        "tags": [
          "VersionProject"
        ],
        "summary": "Returns existing API versions",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns versions",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VersionApi"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VersionApi"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VersionApi"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VersionApi"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VersionApi"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VersionApi"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VersionApi"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VersionApi"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VersionApi"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VersionApi"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VersionApi"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VersionApi"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VersionApi"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VersionApi"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VersionApi"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VersionApi"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects": {
      "get": {
        "tags": [
          "VersionProject"
        ],
        "summary": "Returns existing projects",
        "parameters": [
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns projects",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDTO"
                  }
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDTO"
                  }
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDTO"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDTO"
                  }
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDTO"
                  }
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDTO"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDTO"
                  }
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDTO"
                  }
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDTO"
                  }
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDTO"
                  }
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDTO"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDTO"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDTO"
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDTO"
                  }
                }
              },
              "application/octet-stream": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDTO"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProjectDTO"
                  }
                }
              }
            }
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}": {
      "get": {
        "tags": [
          "VersionProject"
        ],
        "summary": "Returns project by ID",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns project",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              }
            }
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "400": {
            "description": "The Project does not exist or no permission to view project details"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "VersionProject"
        ],
        "summary": "Updates existing project",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json;odata.metadata=minimal;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ProjectRequest"
              }
            },
            "application/json;odata.metadata=minimal;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ProjectRequest"
              }
            },
            "application/json;odata.metadata=minimal": {
              "schema": {
                "$ref": "#/components/schemas/ProjectRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ProjectRequest"
              }
            },
            "application/json;odata.metadata=full;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ProjectRequest"
              }
            },
            "application/json;odata.metadata=full": {
              "schema": {
                "$ref": "#/components/schemas/ProjectRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ProjectRequest"
              }
            },
            "application/json;odata.metadata=none;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ProjectRequest"
              }
            },
            "application/json;odata.metadata=none": {
              "schema": {
                "$ref": "#/components/schemas/ProjectRequest"
              }
            },
            "application/json;odata.streaming=true": {
              "schema": {
                "$ref": "#/components/schemas/ProjectRequest"
              }
            },
            "application/json;odata.streaming=false": {
              "schema": {
                "$ref": "#/components/schemas/ProjectRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProjectRequest"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/ProjectRequest"
              }
            },
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProjectRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updates and returns project",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectDTO"
                }
              }
            }
          },
          "401": {
            "description": "User needs to be logged in"
          },
          "400": {
            "description": "The Project does not exist or no permission to view project details"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v{apiVersion}/projects/{projectId}/users/{username}": {
      "post": {
        "tags": [
          "VersionProject"
        ],
        "summary": "Add user to project",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/UserProjectRole"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns user",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "User or project was not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "VersionProject"
        ],
        "summary": "Updates role of user in project",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "newRole",
            "in": "query",
            "style": "form",
            "schema": {
              "$ref": "#/components/schemas/UserProjectRole"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns user",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "User or project was not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "VersionProject"
        ],
        "summary": "Removes user from project",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "apiVersion",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns user",
            "content": {
              "application/json;odata.metadata=minimal;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=minimal;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=minimal": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=full;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=full": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=none;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.metadata=none": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.streaming=true": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json;odata.streaming=false": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "application/octet-stream": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "User or project was not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdditionalParameter": {
        "required": [
          "key",
          "mandatory",
          "value"
        ],
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "mandatory": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BinaryLinkDTO": {
        "type": "object",
        "properties": {
          "leftElement": {
            "$ref": "#/components/schemas/LeftLinkElementDTO"
          },
          "rightElement": {
            "$ref": "#/components/schemas/RightLinkElementDTO"
          }
        },
        "additionalProperties": false
      },
      "ContainerMetadata": {
        "required": [
          "id",
          "name",
          "projectId",
          "revision",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "internalId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ContainerType"
          },
          "revision": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "format": "multiline",
            "nullable": true
          },
          "uploaded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "sender": {
            "type": "string",
            "nullable": true
          },
          "modifier": {
            "type": "string",
            "nullable": true
          },
          "publisher": {
            "type": "string",
            "nullable": true
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "suitability": {
            "$ref": "#/components/schemas/ContainerSuitability"
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "versionDescription": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ContainerStatus"
          },
          "review": {
            "type": "boolean"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentMetadata"
            },
            "nullable": true
          },
          "linkset": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinksetMetadata"
            },
            "nullable": true
          },
          "metadataSchema": {
            "type": "string",
            "nullable": true
          },
          "additionalParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalParameter"
            },
            "nullable": true
          },
          "sparqlQueries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SparqlQuery"
            },
            "nullable": true
          },
          "statusHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatusHistoryEntry"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContainerMetadataDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/ContainerType"
          },
          "revision": {
            "type": "string",
            "nullable": true
          },
          "projectId": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "uploaded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "sender": {
            "type": "string",
            "nullable": true
          },
          "modifier": {
            "type": "string",
            "nullable": true
          },
          "publisher": {
            "type": "string",
            "nullable": true
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "suitability": {
            "$ref": "#/components/schemas/ContainerSuitability"
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "versionDescription": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/ContainerStatus"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContentMetadata"
            },
            "nullable": true
          },
          "linkset": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinksetMetadata"
            },
            "nullable": true
          },
          "metadataSchema": {
            "type": "string",
            "nullable": true
          },
          "review": {
            "type": "boolean",
            "nullable": true
          },
          "additionalParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalParameter"
            },
            "nullable": true
          },
          "sparqlQueries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SparqlQuery"
            },
            "nullable": true
          },
          "statusHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StatusHistoryEntry"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContainerMetadataRequest": {
        "type": "object",
        "properties": {
          "containerFileName": {
            "type": "string",
            "nullable": true
          },
          "containerDescription": {
            "type": "string",
            "nullable": true
          },
          "revision": {
            "type": "string",
            "nullable": true
          },
          "suitability": {
            "$ref": "#/components/schemas/ContainerSuitability"
          },
          "status": {
            "$ref": "#/components/schemas/ContainerStatus"
          },
          "metadataSchema": {
            "type": "string",
            "nullable": true
          },
          "additionalParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalParameter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContainerStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "ContainerSuitability": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15
        ],
        "type": "integer",
        "format": "int32"
      },
      "ContainerType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "ContentMetadata": {
        "required": [
          "location",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "containerInternalId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "schema": {
            "type": "string",
            "nullable": true
          },
          "schemaVersion": {
            "type": "string",
            "nullable": true
          },
          "schemaSubset": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifier": {
            "type": "string",
            "nullable": true
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "versionDescription": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Directed1ToNLinkDTO": {
        "type": "object",
        "properties": {
          "leftElement": {
            "$ref": "#/components/schemas/LeftLinkElementDTO"
          },
          "rightElements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RightLinkElementDTO"
            },
            "nullable": true
          },
          "specialization": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DirectedBinaryLinkDTO": {
        "type": "object",
        "properties": {
          "leftElement": {
            "$ref": "#/components/schemas/LeftLinkElementDTO"
          },
          "rightElement": {
            "$ref": "#/components/schemas/RightLinkElementDTO"
          },
          "specialization": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DirectedLinkDTO": {
        "type": "object",
        "properties": {
          "leftElements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LeftLinkElementDTO"
            },
            "nullable": true
          },
          "rightElements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RightLinkElementDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IdentifierDTO": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/LinkIdentifierType"
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "identifierField": {
            "type": "string",
            "nullable": true
          },
          "uri": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "queryExpression": {
            "type": "string",
            "nullable": true
          },
          "queryLanguage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JToken": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/JToken"
        }
      },
      "LeftLinkElementDTO": {
        "type": "object",
        "properties": {
          "hasDocument": {
            "type": "string",
            "nullable": true
          },
          "hasIdentifier": {
            "$ref": "#/components/schemas/IdentifierDTO"
          }
        },
        "additionalProperties": false
      },
      "LinkDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "delete": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "LinkIdentifierType": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "LinksetMetadata": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "containerInternalId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "creator": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modifier": {
            "type": "string",
            "nullable": true
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "versionDescription": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Project": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "containers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContainerMetadata"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProjectDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "modified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ProjectRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RightLinkElementDTO": {
        "type": "object",
        "properties": {
          "hasDocument": {
            "type": "string",
            "nullable": true
          },
          "hasIdentifier": {
            "$ref": "#/components/schemas/IdentifierDTO"
          }
        },
        "additionalProperties": false
      },
      "SparqlQuery": {
        "required": [
          "generatedAt",
          "id",
          "query"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "generatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StatusHistoryEntry": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "timeStamp": {
            "type": "string",
            "format": "date-time"
          },
          "username": {
            "type": "string",
            "nullable": true
          },
          "fromStatus": {
            "$ref": "#/components/schemas/ContainerStatus"
          },
          "toStatus": {
            "$ref": "#/components/schemas/ContainerStatus"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "isRequest": {
            "type": "boolean"
          },
          "comment": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "User": {
        "required": [
          "refreshTokenExpiration"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "normalizedUserName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "normalizedEmail": {
            "type": "string",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "passwordHash": {
            "type": "string",
            "nullable": true
          },
          "securityStamp": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean"
          },
          "twoFactorEnabled": {
            "type": "boolean"
          },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockoutEnabled": {
            "type": "boolean"
          },
          "accessFailedCount": {
            "type": "integer",
            "format": "int32"
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          },
          "refreshTokenExpiration": {
            "type": "string",
            "format": "date-time"
          },
          "organisation": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            },
            "nullable": true
          },
          "isManagerToProject": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            },
            "nullable": true
          },
          "isCoordinatorToProject": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            },
            "nullable": true
          },
          "receivedContainers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContainerMetadata"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserLogin": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserProjectRole": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "UserRegister": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "projects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Project"
            },
            "nullable": true
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VersionApi": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}